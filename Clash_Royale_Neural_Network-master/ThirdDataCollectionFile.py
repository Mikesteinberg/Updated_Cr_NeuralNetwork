#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Feb 16 23:27:08 2018

@author: mike
"""

import requests
import re
import time

ladder_file = open("new_match_file_ladder.txt", "w")
challenge_file = open("new_match_file_challenge.txt", "w")
tag_file = open("nonProcessedTags.txt", "r")
playerTags = tag_file.read()
final_player_tags = playerTags.split(",")
tag_file.close()

class Player():
    
    def __init__(self, tag):
        self.tag = tag
        self.url = "http://api.cr-api.com/player/%s/battles" % self.tag
    
        headers = {
                'auth': "99aeb55dea6e41c59a64bd02dc25f4c5ada5594cf8dc46fc982a67f2c480fb3d"
            }
                
    
        self.response = requests.request("GET", self.url, headers=headers)
    
    
        try:
            self.data = self.response.json()
        except:
            print(self.response)
            print("")
    
    def find_deck_links(self, data_string):
        
        location = [m.start() for m in re.finditer('deck=', data_string)]
        
        deck_link = data_string[location[0] + 5 : location[0] + 76]
        
        deck_link = str(deck_link)
        
        deck_link.replace(".join(';')}", "")
        
        return deck_link
    
    card_links = {}
    card_links["26000000"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000000001"
    card_links["26000001"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000000010"
    card_links["26000002"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000000100"
    card_links["26000003"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000001000"
    card_links["26000004"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000010000"
    card_links["26000005"] = "100000000000000000000000000000000000000000000000000000000000000000000000000000100000"
    card_links["26000006"] = "100000000000000000000000000000000000000000000000000000000000000000000000000001000000"
    card_links["26000007"] = "100000000000000000000000000000000000000000000000000000000000000000000000000010000000"
    card_links["26000008"] = "100000000000000000000000000000000000000000000000000000000000000000000000000100000000"
    card_links["26000009"] = "100000000000000000000000000000000000000000000000000000000000000000000000001000000000"
    card_links["26000010"] = "100000000000000000000000000000000000000000000000000000000000000000000000010000000000"
    card_links["26000011"] = "100000000000000000000000000000000000000000000000000000000000000000000000100000000000"
    card_links["26000012"] = "100000000000000000000000000000000000000000000000000000000000000000000001000000000000"
    card_links["26000013"] = "100000000000000000000000000000000000000000000000000000000000000000000010000000000000"
    card_links["26000014"] = "100000000000000000000000000000000000000000000000000000000000000000000100000000000000"
    card_links["26000015"] = "100000000000000000000000000000000000000000000000000000000000000000001000000000000000"
    card_links["26000016"] = "100000000000000000000000000000000000000000000000000000000000000000010000000000000000"
    card_links["26000017"] = "100000000000000000000000000000000000000000000000000000000000000000100000000000000000"
    card_links["26000018"] = "100000000000000000000000000000000000000000000000000000000000000001000000000000000000"
    card_links["26000019"] = "100000000000000000000000000000000000000000000000000000000000000010000000000000000000"
    card_links["26000020"] = "100000000000000000000000000000000000000000000000000000000000000100000000000000000000"
    card_links["26000021"] = "100000000000000000000000000000000000000000000000000000000000001000000000000000000000"
    card_links["26000022"] = "100000000000000000000000000000000000000000000000000000000000010000000000000000000000"
    card_links["26000023"] = "100000000000000000000000000000000000000000000000000000000000100000000000000000000000"
    card_links["26000024"] = "100000000000000000000000000000000000000000000000000000000001000000000000000000000000"
    card_links["26000025"] = "100000000000000000000000000000000000000000000000000000000010000000000000000000000000"
    card_links["26000026"] = "100000000000000000000000000000000000000000000000000000000100000000000000000000000000"
    card_links["26000027"] = "100000000000000000000000000000000000000000000000000000001000000000000000000000000000"
    card_links["26000028"] = "100000000000000000000000000000000000000000000000000000010000000000000000000000000000"
    card_links["26000029"] = "100000000000000000000000000000000000000000000000000000100000000000000000000000000000"
    card_links["26000030"] = "100000000000000000000000000000000000000000000000000001000000000000000000000000000000"
    card_links["26000031"] = "100000000000000000000000000000000000000000000000000010000000000000000000000000000000"
    card_links["26000032"] = "100000000000000000000000000000000000000000000000000100000000000000000000000000000000"
    card_links["26000033"] = "100000000000000000000000000000000000000000000000001000000000000000000000000000000000"
    card_links["26000034"] = "100000000000000000000000000000000000000000000000010000000000000000000000000000000000"
    card_links["26000035"] = "100000000000000000000000000000000000000000000000100000000000000000000000000000000000"
    card_links["26000036"] = "100000000000000000000000000000000000000000000001000000000000000000000000000000000000"
    card_links["26000037"] = "100000000000000000000000000000000000000000000010000000000000000000000000000000000000"
    card_links["26000038"] = "100000000000000000000000000000000000000000000100000000000000000000000000000000000000"
    card_links["26000039"] = "100000000000000000000000000000000000000000001000000000000000000000000000000000000000"
    card_links["26000040"] = "100000000000000000000000000000000000000000010000000000000000000000000000000000000000"
    card_links["26000041"] = "100000000000000000000000000000000000000000100000000000000000000000000000000000000000"
    card_links["26000042"] = "100000000000000000000000000000000000000001000000000000000000000000000000000000000000"
    card_links["26000043"] = "100000000000000000000000000000000000000010000000000000000000000000000000000000000000"
    card_links["26000044"] = "100000000000000000000000000000000000000100000000000000000000000000000000000000000000"
    card_links["26000045"] = "100000000000000000000000000000000000001000000000000000000000000000000000000000000000"
    card_links["26000046"] = "100000000000000000000000000000000000010000000000000000000000000000000000000000000000"
    card_links["26000048"] = "100000000000000000000000000000000000100000000000000000000000000000000000000000000000"
    card_links["26000049"] = "100000000000000000000000000000000001000000000000000000000000000000000000000000000000"
    card_links["26000050"] = "100000000000000000000000000000000010000000000000000000000000000000000000000000000000"
    card_links["26000052"] = "100000000000000000000000000000000100000000000000000000000000000000000000000000000000"
    card_links["26000054"] = "100000000000000000000000000000001000000000000000000000000000000000000000000000000000"
    card_links["26000055"] = "100000000000000000000000000000010000000000000000000000000000000000000000000000000000"
    card_links["26000056"] = "100000000000000000000000000000100000000000000000000000000000000000000000000000000000"
    card_links["26000057"] = "100000000000000000000000000001000000000000000000000000000000000000000000000000000000"
    card_links["27000000"] = "100000000000000000000000000010000000000000000000000000000000000000000000000000000000"
    card_links["27000001"] = "100000000000000000000000000100000000000000000000000000000000000000000000000000000000"
    card_links["27000002"] = "100000000000000000000000001000000000000000000000000000000000000000000000000000000000"
    card_links["27000003"] = "100000000000000000000000010000000000000000000000000000000000000000000000000000000000"
    card_links["27000004"] = "100000000000000000000000100000000000000000000000000000000000000000000000000000000000"
    card_links["27000005"] = "100000000000000000000001000000000000000000000000000000000000000000000000000000000000"
    card_links["27000006"] = "100000000000000000000010000000000000000000000000000000000000000000000000000000000000"
    card_links["27000007"] = "100000000000000000000100000000000000000000000000000000000000000000000000000000000000"
    card_links["27000008"] = "100000000000000000001000000000000000000000000000000000000000000000000000000000000000"
    card_links["27000009"] = "100000000000000000010000000000000000000000000000000000000000000000000000000000000000"
    card_links["27000010"] = "100000000000000000100000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000000"] = "100000000000000001000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000001"] = "100000000000000010000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000002"] = "100000000000000100000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000003"] = "100000000000001000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000004"] = "100000000000010000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000005"] = "100000000000100000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000006"] = "100000000001000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000007"] = "100000000010000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000008"] = "100000000100000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000009"] = "100000001000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000010"] = "100000010000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000011"] = "100000100000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000012"] = "100001000000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000013"] = "100010000000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["28000016"] = "100100000000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["26000062"] = "101000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["n/a"] =      "110000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    card_links["n/a).join(';')}"] = "110000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    
    
    def print_winner_int(self, number):
        winner_int = (self.data[number]['winner'])
        if winner_int > 0:
            return("100")
        elif winner_int < 0:
            return("001")
        else:
            return("010")
            
    def print_winner_int_two(self, number):
        winner_int = (self.data[number]['winner'])
        if winner_int > 0:
            return("001")
        elif winner_int < 0:
            return("100")
        else:
            return("010")
        
    def create_deck_string(self, card_array):
        deck_sum = 0
        for card in card_array:
            card_value = int(card)
            deck_sum = deck_sum + card_value
        deck_string = str(deck_sum)
        return deck_string[1:]
    
    def get_data_for_player(self):
        
        player_array_ladder = []
        player_array_challenge = []
        
        try:
            for match in range (0, 25):
                
                match_mode = self.data[match]['mode']['name']
                
                if(str(match_mode) != "Challenge" and str(match_mode) != "Ladder" and str(match_mode) != "CardReleaseDraft"):
                    continue
                
                deck_one = self.data[match]['team'][0]['deckLink']
                
                deck_two = self.data[match]['opponent'][0]['deckLink']
                
                deck_link1 = self.find_deck_links(deck_one)
                deck_link2 = self.find_deck_links(deck_two)
                
                split_deck1 = deck_link1.split(";")
                split_deck2 = deck_link2.split(";")
                       
                card_array1 = []
                for card in split_deck1:
                    card_array1.append(self.card_links[card])
                deck1_string = self.create_deck_string(card_array1)
                        
                card_array2 = []
                for card in split_deck2:
                    card_array2.append(self.card_links[card])
                deck2_string = self.create_deck_string(card_array2)
                
                match_array = deck1_string + deck2_string
                
                match_array_two = deck2_string + deck1_string
                
                total_match = match_array + self.print_winner_int(match)
                
                total_match_two = match_array_two + self.print_winner_int_two(match)
                
                if(str(match_mode) == "Ladder"):
                    player_array_ladder.append(total_match)
                    player_array_ladder.append(total_match_two)
                    
                if(str(match_mode) == "Challenge" or str(match_mode) == "CardReleaseDraft"):
                    player_array_challenge.append(total_match)
                    player_array_challenge.append(total_match_two)
                
            for match in player_array_ladder:
                match_string = ""
                for char in str(match):
                    match_string = match_string + char + ","
                ladder_file.write(match_string[:-1] + '\n') 
                
            for match in player_array_challenge:
                match_string = ""
                for char in str(match):
                    match_string = match_string + char + ","
                challenge_file.write(match_string[:-1] + '\n') 
                
        except Exception as q:
            if str(self.response) != "<Response [200]>":
                print("API DOWN")
                time.sleep(200)
            else:
                print("Insufficient Matches Available")
                print(q)
                
            
    def get_tag_array(self):
        opponent_tag_array = []
        for match in range (0, 25):
            opponent_tag = self.data[match]['opponent'][0]['tag']
            opponent_tag_array.append(opponent_tag)
        
        print("Tags Collected")
        return(opponent_tag_array)
     

player_counter = 570000

while player_counter < 700000:
    try:
        players = Player(final_player_tags[player_counter])
        players.get_data_for_player()
        time.sleep(.01)
        player_counter += 1
        print(player_counter)
    except:
       continue